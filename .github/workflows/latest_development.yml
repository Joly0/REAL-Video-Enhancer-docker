name: Build and Push Dev Docker Image

on:
  schedule:
    - cron: '0 */2 * * *'  # Run every 2 hours
  workflow_dispatch:  # Allow manual triggering

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-push-dev:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
    - name: Checkout repository
      uses: actions/checkout@v3

    - name: Get last commit info
      id: last_commit
      run: |
        LAST_COMMIT_TIME=$(git log -1 --format=%ct)
        CURRENT_TIME=$(date +%s)
        TIME_DIFF=$((CURRENT_TIME - LAST_COMMIT_TIME))
        if [ $TIME_DIFF -ge 14400 ]; then  # 14400 seconds = 4 hours
          echo "build=true" >> $GITHUB_OUTPUT
        else
          echo "build=false" >> $GITHUB_OUTPUT
        fi
        echo "LAST_COMMIT_HASH=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

    - name: Check for updates
      id: check
      if: steps.last_commit.outputs.build == 'true'
      run: |
        if [ ! -f .last_dev_build ] || [ "$(cat .last_dev_build)" != "${{ steps.last_commit.outputs.LAST_COMMIT_HASH }}" ]; then
          echo "update=true" >> $GITHUB_OUTPUT
        else
          echo "update=false" >> $GITHUB_OUTPUT
        fi

    - name: Prepare Docker metadata
      id: meta
      run: |
        echo "IMAGE_ID=$(echo ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }} | tr '[A-Z]' '[a-z]')" >> $GITHUB_OUTPUT

    - name: Log in to the Container registry
      if: steps.check.outputs.update == 'true'
      uses: docker/login-action@v2
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Build and push Docker image
      if: steps.check.outputs.update == 'true'
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.IMAGE_ID }}:dev
        file: ./dockerfile.dev

    - name: Update last build info
      if: steps.check.outputs.update == 'true'
      run: |
        echo "${{ steps.last_commit.outputs.LAST_COMMIT_HASH }}" > .last_dev_build
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add .last_dev_build
        git commit -m "Update last dev build info"
        git push
